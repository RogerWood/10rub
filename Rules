#!/usr/bin/env ruby

#
# сompilation #################################################################
#

# частичные шаблоны обозначаются подчеркиванием 
compile '/assets/styles/_*/' do   
   # не обрабатывать и не выкладывать
end
 
compile '/assets/styles/*/' do
   #filter :sass, Compass.sass_engine_options
   #filter :relativize_paths, :type => :css
   filter :rainpress
end

#compile '/series/*/*/' do
#   filter :kramdown, :auto_ids => false
#   layout 'coin'
#end

#compile '/series/*/' do
#   filter :kramdown, :auto_ids => false
#   layout 'series'
#end

compile '*' do
   if item.binary?
      # бинарные файлы не трогаем
   else
      
      # определение по расширению    
      case item[:extension]
         when 'md', 'markdown' then
            case item[:markdown]
               when 'advanced'
                  filter :kramdown, :auto_ids => false
               when 'basic'
                  filter :rdiscount
            end
        # when 'haml'
         #   filter :haml
         
         # на всякий случай
         # when 'md','markdown' then
         #   filter :bluecloth
      end
      
      #layout 'default'
     # filter :haml, :format => :html5
     
      filter :erb
      layout 'default'
      
      #if @item[:layout]
      #   layout(@item[:layout])
      #elsif @item[:kind] == 'article'
      #   layout 'article'
      #end
  end
end

#
# routing #####################################################################
#

route '/assets/styles/*/' do
   item.identifier[14..-2] + '.css'
end

route '*' do
   if item.binary?    
      # бинарные файлы должны иметь нормальный необрезанный путь
      item.identifier.chop + '.' + item[:extension]  
   elsif item[:is_partial] || item[:kind] == 'article'
      # не выводить частичные шаблоны, стили и прочее
      nil 
   else
      # каждый файл в отдельную директорию
      rep.item.identifier + 'index.html'
   end
end

#
# layouting ###################################################################
#

layout '/default/', :haml, :format => :html5, :ugly => true

layout '*', :erb

